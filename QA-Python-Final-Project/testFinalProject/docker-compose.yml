version: '2.1'

networks:
  selenoid:
    external: False
    name: selenoid

services:

  tests:
    build: for_start_tests
    tty: true
    networks:
      - selenoid
    volumes:
          - "${WORKSPACE}/QA-Python-Final-Project/testFinalProject/project_tests:/src"
          - "${WORKSPACE}/alluredir:/tmp/allure"
          - /var/run/docker.sock:/var/run/docker.sock
    working_dir: /src
    entrypoint: /bin/bash /src/start_tests.sh
    environment:
      - TESTS_PATH=  #здесь можно указать файл test_*.py для исполнения
      - THREADS=2
    depends_on:
      myapp:
        condition: service_healthy

  myapp:
    image: "myapp"
    networks:
      - selenoid
    volumes:
      - "${WORKSPACE}/QA-Python-Final-Project/testFinalProject/for_app/app_config.txt:/config/app_config.txt"
    command: /app/myapp --config=/config/app_config.txt
    ports:
      - "40:40"
    depends_on:
      db:
        condition: service_healthy
      selenoid:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "127.0.0.1:40"]
      timeout: 10s
      retries: 15

  myapp_proxy:
    image: "nginx:stable"
    networks:
      - selenoid
    volumes:
      - "${WORKSPACE}/QA-Python-Final-Project/testFinalProject/for_app/default.conf:/etc/nginx/conf.d/default.conf"
    depends_on:
      myapp:
        condition: service_started

  db:
    image: "percona:latest"
    networks:
      - selenoid
    environment:
      MYSQL_DATABASE: PROJECT_DB
      MYSQL_ROOT_PASSWORD: mypass
      MYSQL_USER: test_qa
      MYSQL_PASSWORD: qa_test
    ports:
      - "3306:3306"
    volumes:
      - "${WORKSPACE}/QA-Python-Final-Project/testFinalProject/for_app/db_init.sql:/docker-entrypoint-initdb.d/db_init.sql"
    healthcheck:
      test: ["CMD", "mysqladmin", "-uroot", "-pmypass", "ping", "-h", "db" ]
      timeout: 5s
      retries: 15

  my_vk_mock:
    build: project_tests/myapp_test/mock
    networks:
      - selenoid
    ports:
      - "5000:5000"

  selenoid_chrome:
    image: "selenoid/chrome:94.0"

  selenoid:
    image: "aerokube/selenoid:latest"
    networks:
      - selenoid
    ports:
      - "4444:4444"
    volumes:
      - "${WORKSPACE}/QA-Python-Final-Project/testFinalProject/selenoid:/etc/selenoid"
      - /var/run/docker.sock:/var/run/docker.sock
    command: ["-conf", "/etc/selenoid/browsers.json",  "-container-network", "selenoid", "-timeout", "5m"]

  selenoid-ui:
    image: "aerokube/selenoid-ui:latest"
    networks:
      - selenoid
    ports:
      - "9090:8080"
    command: ["--selenoid-uri", "http://selenoid:4444"]